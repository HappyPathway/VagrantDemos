#!/usr/bin/env python
import hvac
import os

def main():
    module = AnsibleModule(
        argument_spec = dict(
            mount_point = dict(required=True),
            backend_type = dict(required=True),
            delete = dict(required=False),
            vault_addr = dict(required=False),
            vault_token = dict(required=False),
            vault_skip_verify = dict(required=False),
        )
    )
    try:
        mp = module.params.get("mount_point")
        bt = module.params.get("backend_type")
        delete = module.params.get("delete")
        for k, v in module.params.items():
            if 'vault' in k:
                if v:
                    os.environ[k.upper()] = v
        
        client = hvac.Client(
            url=os.environ.get('VAULT_ADDR'), 
            token=os.environ.get('VAULT_TOKEN')
        )
        
    
        if not delete:
            client.enable_auth_backend(
                mount_point=mp,
                backend_type=bt
            )
        else:
            client.disable_auth_backend(mp)
        
        module.exit_json(changed=True)

    except Exception as e:
        module.fail_json(msg=str(e))


from ansible.module_utils.basic import AnsibleModule
if __name__ == '__main__':
    main()