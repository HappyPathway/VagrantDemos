---
- name: stat public key
  stat: path="{{ lookup('env', 'HOME') }}/.ssh/id_rsa.pub"
  register: pub_key_path

- name: copy requirements.txt
  copy: src=requirements.txt dest=/tmp/requirements.txt.vault_ssh_client

- name: install requirements
  pip: requirements=/tmp/requirements.txt.vault_ssh_client executable=/usr/local/bin/pip
  
- name: create .ssh directory
  file: path="{{ lookup('env', 'HOME') }}/.ssh" mode=0700 state=directory
  when: not pub_key_path.stat.exists

- name: destroy id_rsa key
  file: path={{ lookup('env', 'HOME') }}/.ssh/id_rsa state=absent
  when: not pub_key_path.stat.exists
      
- name: generate ssh key
  command : ssh-keygen -q -t rsa -f {{ lookup('env', 'HOME') }}/.ssh/id_rsa -C "" -N ""
  creates: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa.pub"
  when: not pub_key_path.stat.exists

- name: update SSH Keys
  vault_ssh_sign_key: 
    vault_addr: "{{ vault_addr }}"
    vault_token: "{{ vault_token }}"
    key_path:  "/home/vagrant/.ssh/id_rsa.pub"
    ssh_mount: ssh-{{ env }}
    ssh_profile: root 
    signed_key_path: "/home/vagrant/.ssh/id_rsa-cert.pub"